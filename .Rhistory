gender + gen_referentiality + gen_length,
data = gen, controls = cforest_unbiased(ntree = 1, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gender + gen_referentiality + gen_length,
data = gen, controls = cforest_unbiased(ntree = 1, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gender + gen_referentiality + gen_length,
data = gen, controls = cforest_unbiased(ntree = 1, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("sample.csv")
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(morphosynt_type != "") %>%
select("language", "morphosynt_type") %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(morphosynt_type, tf, fill = FALSE) -> df2
map.feature(languages = df2$language,
minichart.data = df2[, c("adverbial_phrase", "affix", "auxiliary", "not_clear")],
minichart = "pie",
width = 2)
map.feature(languages = df2$language,
minichart.data = df2[, c("affix", "auxiliary")],
minichart = "pie",
width = 2)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("Luke_contexts_3.csv")
df1 = df[-1,]
df1
map.feature(languages = lang.iso(df1$X),
features = as.numeric(df1$sum))
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("sample.csv")
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(pred_restrictions != "") %>%
select("language", "pred_restrictions") %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(pred_restrictions, tf, fill = FALSE) -> df2
map.feature(languages = df2$language,
minichart.data = df2[, c("only statives", "only locatives",
"only agentive verbs")],
minichart = "pie",
width = 2)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("sample.csv")
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(pred_restrictions != "") %>%
select("language", "pred_restrictions") %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(pred_restrictions, tf, fill = FALSE) -> df2
map.feature(languages = df2$language,
minichart.data = df2[, c("only statives", "only locatives",
"only agentive verbs", "only dynamic verbs")],
minichart = "pie",
width = 2)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("sample.csv")
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(other_uses != "") %>%
select("family", "language", "other_uses") %>%
separate_rows(other_uses, sep = ", ") %>%
distinct() -> df2
df2$other_uses[df2$other_uses == "more than" |
df2$other_uses == "more" |
df2$other_uses == "also" |
df2$other_uses == "too" |
df2$other_uses == "in addition" ] <- "more / also"
df2$other_uses[df2$other_uses == "all the time" |
df2$other_uses == "always" |
df2$other_uses == "continuously" |
df2$other_uses == "continually"] <- "constantly"
df2$other_uses[df2$other_uses == "up to now" |
df2$other_uses == "now" |
df2$other_uses == "for now"] <- "now / for now"
df2$other_uses[df2$other_uses == "sit" |
df2$other_uses == "be" |
df2$other_uses == "become"] <- "stay"
df2$other_uses[df2$other_uses == "a long time yet" |
df2$other_uses == "forever" |
df2$other_uses == "for a long time" |
df2$other_uses == "for some time" |
df2$other_uses == "have been doing" |
df2$other_uses == "for a while"] <- "for a while / for a long time"
df2$other_uses[df2$other_uses == "immediately" |
df2$other_uses == "after" |
df2$other_uses == "in a moment" |
df2$other_uses == "later" |
df2$other_uses == "future"] <- "after / in a moment / future tense"
df2$other_uses[df2$other_uses == "just now" |
df2$other_uses == "recently" |
df2$other_uses == "just a moment ago" |
df2$other_uses == "before"|
df2$other_uses == "a while ago" |
df2$other_uses == "just" |
df2$other_uses == "perfect"] <-
"before / a while ago / just a moment ago / just"
df2$other_uses[df2$other_uses == "together" |
df2$other_uses == "throughout"|
df2$other_uses == "all"] <- "all / throughout"
df2$other_uses[df2$other_uses == "really" |
df2$other_uses == "exactly"] <- "very"
df2$other_uses[df2$other_uses == "imperfective" |
df2$other_uses == "progressive"] <- "progressive / imperfective"
df2$other_uses[df2$other_uses == "nevertheless" |
df2$other_uses == "whereas"] <- "nevertheless / whereas"
df2$other_uses[df2$other_uses == "wait" |
df2$other_uses == "despair (\"how on Earth... \")"] <- "wait! / how on Earth..."
df2$other_uses[df2$other_uses == "only" |
df2$other_uses == "alone"] <- "only / alone"
unique(df2$other_uses)
df2 %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(other_uses, tf, fill = NA) -> df3
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("springgreen", "darkcyan", "deeppink", "black", "turquoise", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "turquoise", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
library(DT)
library(tidyverse)
library(lingtypology)
df <- read.csv("sample.csv")
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(other_uses != "") %>%
select("family", "language", "other_uses") %>%
separate_rows(other_uses, sep = ", ") %>%
distinct() -> df2
df2$other_uses[df2$other_uses == "more than" |
df2$other_uses == "more" |
df2$other_uses == "also" |
df2$other_uses == "too" |
df2$other_uses == "in addition" ] <- "more / also"
df2$other_uses[df2$other_uses == "all the time" |
df2$other_uses == "always" |
df2$other_uses == "continuously" |
df2$other_uses == "continually"] <- "constantly"
df2$other_uses[df2$other_uses == "up to now" |
df2$other_uses == "now" |
df2$other_uses == "for now"] <- "now / for now"
df2$other_uses[df2$other_uses == "sit" |
df2$other_uses == "be" |
df2$other_uses == "become"] <- "stay"
df2$other_uses[df2$other_uses == "a long time yet" |
df2$other_uses == "forever" |
df2$other_uses == "for a long time" |
df2$other_uses == "for some time" |
df2$other_uses == "have been doing" |
df2$other_uses == "for a while"] <- "for a while / for a long time"
df2$other_uses[df2$other_uses == "immediately" |
df2$other_uses == "after" |
df2$other_uses == "in a moment" |
df2$other_uses == "later" |
df2$other_uses == "future"] <- "after / in a moment / future tense"
df2$other_uses[df2$other_uses == "just now" |
df2$other_uses == "recently" |
df2$other_uses == "just a moment ago" |
df2$other_uses == "before"|
df2$other_uses == "a while ago" |
df2$other_uses == "just" |
df2$other_uses == "perfect"] <-
"before / a while ago / just a moment ago / just"
df2$other_uses[df2$other_uses == "together" |
df2$other_uses == "throughout"|
df2$other_uses == "all"] <- "all / throughout"
df2$other_uses[df2$other_uses == "really" |
df2$other_uses == "exactly"] <- "very"
df2$other_uses[df2$other_uses == "imperfective" |
df2$other_uses == "progressive"] <- "progressive / imperfective"
df2$other_uses[df2$other_uses == "nevertheless" |
df2$other_uses == "whereas"] <- "nevertheless / whereas"
df2$other_uses[df2$other_uses == "wait" |
df2$other_uses == "despair (\"how on Earth... \")"] <- "wait! / how on Earth..."
df2$other_uses[df2$other_uses == "only" |
df2$other_uses == "alone"] <- "only / alone"
unique(df2$other_uses)
df2 %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(other_uses, tf, fill = NA) -> df3
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "gold", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c("more / also", "again", "constantly")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment / future tense",
"while")],
minichart = "pie",
width = 2,
color= c("springgreen", "darkcyan", "deeppink", "black", "turquoise", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment / future tense",
"while")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "black", "turquoise", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment / future tense",
"while")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "violet", "red", "yellow", "yellowgreen", "blueviolet", "forestgreen", "gold", "goldenrod", "greenyellow", "hotpink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment / future tense",
"while")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "royalblue", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment / future tense",
"while")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "gold", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
df %>%
filter(included != "no") -> df1
df1
df1 %>%
filter(other_uses != "") %>%
select("family", "language", "other_uses") %>%
separate_rows(other_uses, sep = ", ") %>%
distinct() -> df2
df2$other_uses[df2$other_uses == "more than" |
df2$other_uses == "more" |
df2$other_uses == "also" |
df2$other_uses == "too" |
df2$other_uses == "in addition" ] <- "more / also"
df2$other_uses[df2$other_uses == "all the time" |
df2$other_uses == "always" |
df2$other_uses == "continuously" |
df2$other_uses == "continually"] <- "constantly"
df2$other_uses[df2$other_uses == "up to now" |
df2$other_uses == "now" |
df2$other_uses == "for now"] <- "now / for now"
df2$other_uses[df2$other_uses == "sit" |
df2$other_uses == "be" |
df2$other_uses == "become"] <- "stay"
df2$other_uses[df2$other_uses == "a long time yet" |
df2$other_uses == "forever" |
df2$other_uses == "for a long time" |
df2$other_uses == "for some time" |
df2$other_uses == "have been doing" |
df2$other_uses == "for a while"] <- "for a while / for a long time"
df2$other_uses[df2$other_uses == "immediately" |
df2$other_uses == "after" |
df2$other_uses == "in a moment" |
df2$other_uses == "later" ] <- "after / in a moment"
df2$other_uses[df2$other_uses == "just now" |
df2$other_uses == "recently" |
df2$other_uses == "just a moment ago" |
df2$other_uses == "before"|
df2$other_uses == "a while ago" |
df2$other_uses == "just" |
df2$other_uses == "perfect"] <-
"before / a while ago / just a moment ago / just"
df2$other_uses[df2$other_uses == "together" |
df2$other_uses == "throughout"|
df2$other_uses == "all"] <- "all / throughout"
df2$other_uses[df2$other_uses == "really" |
df2$other_uses == "exactly"] <- "very"
df2$other_uses[df2$other_uses == "imperfective" |
df2$other_uses == "progressive"] <- "progressive / imperfective"
df2$other_uses[df2$other_uses == "nevertheless" |
df2$other_uses == "whereas"] <- "nevertheless / whereas"
df2$other_uses[df2$other_uses == "wait" |
df2$other_uses == "despair (\"how on Earth... \")"] <- "wait! / how on Earth..."
df2$other_uses[df2$other_uses == "only" |
df2$other_uses == "alone"] <- "only / alone"
unique(df2$other_uses)
df2 %>%
distinct() %>%
mutate(tf = TRUE) %>%
spread(other_uses, tf, fill = NA) -> df3
map.feature(languages = df3$language,
minichart.data = df3[, c( "before / a while ago / just a moment ago / just", "after / in a moment",
"while")],
minichart = "pie",
width = 2,
color= c("darkcyan", "deeppink", "gold", "lightpink", "lightsalmon", "lightseagreen", "mediumvioletred", "lightyellow", "limegreen"),
legend = TRUE
)
View (df3)
library("party")
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class + education +
gender + gen_referentiality + language_family + year_of_birth +
gen_individuation + gen_length + head_length + givenness +
(1|speaker)
data = gen, controls = cforest_unbiased(ntree = 1, mtry = 2))
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class + education +
gender + gen_referentiality + language_family + year_of_birth +
gen_individuation + gen_length + head_length + givenness +
(1|speaker),
data = gen, controls = cforest_unbiased(ntree = 1, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class + education +
gender + gen_referentiality + language_family + year_of_birth +
gen_individuation + gen_length + head_length + givenness +
(1|speaker),
data = gen, controls = cforest_unbiased(ntree = 100, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class + education +
gender + gen_referentiality + language_family + year_of_birth +
gen_individuation + gen_length + head_length + givenness,
data = gen, controls = cforest_unbiased(ntree = 100, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class + education +
gender + gen_referentiality + language_family + year_of_birth +
gen_individuation + gen_length + head_length + givenness,
data = gen, controls = cforest_unbiased(ntree = 1000, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
table(predict(gen_rf.rf), gen_rf$Cx)
table(predict(gen_rf), gen_rf$Cx)
table(predict(gen_rf), gen_rf$position)
table(predict(gen_rf), gen$position)
(65 + 362)/482
gen_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gender + gen_referentiality + gen_length,
data = gen, controls = cforest_unbiased(ntree = 1000, mtry = 2))
gen_varimp <- varimp(gen_rf, conditional = TRUE)
dotchart(sort(gen_varimp), main = "Conditional importance of variables")
table(predict(gen_rf), gen$position)
(64 + 362)/482
(65 + 362)/482
somers2(gen_rf, as.numeric(gen$position) -1)
gen_rf.pred <- unlist(treeresponse(gen_rf))[c(FALSE,TRUE)]
somers2(gen_rf.pred, as.numeric(gen$position) -1)
knitr::opts_chunk$set(echo = TRUE)
gen_std_rf.pred <- unlist(treeresponse(gen_std_rf))[c(FALSE,TRUE)]
gen_std <- read.csv("std_rus.csv", stringsAsFactors=TRUE)
gen_std$head_lexical_class <- relevel(gen_std$head_lexical_class, "non_kinship")
gen_std$gen_lexical_class <- relevel(gen_std$gen_lexical_class, "non_human")
gen_std$gen_referentiality <- relevel(gen_std$gen_referentiality,"non_definite")
gen_std$gen_length <- relevel(gen_std$gen_length,"one-word")
library("party")
gen_std_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gen_referentiality + gen_length,
data = gen_std, controls = cforest_unbiased(ntree = 1000, mtry = 2))
gen_std_varimp <- varimp(gen_std_rf, conditional = TRUE)
gen_std_rf.pred <- unlist(treeresponse(gen_std_rf))[c(FALSE,TRUE)]
somers2(gen_std_rf.pred, as.numeric(gen_std$position) -1)
gen_std_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gen_referentiality + gen_length,
data = gen_std, controls = cforest_unbiased(ntree = 1000, mtry = 2))
gen_std_varimp <- varimp(gen_std_rf, conditional = TRUE)
dotchart(sort(gen_std_varimp), main = "Conditional importance of variables")
library(Hmisc)
gen_std_rf.pred <- unlist(treeresponse(gen_std_rf))[c(FALSE,TRUE)]
somers2(gen_std_rf.pred, as.numeric(gen_std$position) -1)
gen_std_rf.pred <- unlist(treeresponse(gen_std_rf))[c(FALSE,TRUE)]
somers2(gen_std_rf.pred, as.numeric(gen_std$position) -1)
table(predict(gen_std_rf), gen_std$position)
View(gen_std)
gen_std <- read.csv("std_rus.csv", stringsAsFactors=TRUE)
View(gen_std)
gen_std$head_lexical_class <- relevel(gen_std$head_lexical_class, "non_kinship")
gen_std$gen_lexical_class <- relevel(gen_std$gen_lexical_class, "non_human")
gen_std$gen_referentiality <- relevel(gen_std$gen_referentiality,"non_definite")
gen_std$gen_length <- relevel(gen_std$gen_length,"one-word")
gen_std_rf <- cforest(position ~ gen_lexical_class + head_lexical_class +
gen_referentiality + gen_length,
data = gen_std, controls = cforest_unbiased(ntree = 1000, mtry = 2))
gen_std_varimp <- varimp(gen_std_rf, conditional = TRUE)
dotchart(sort(gen_std_varimp), main = "Conditional importance of variables")
gen_std_rf.pred <- unlist(treeresponse(gen_std_rf))[c(FALSE,TRUE)]
somers2(gen_std_rf.pred, as.numeric(gen_std$position) -1)
table(predict(gen_std_rf), gen_std$position)
656/675
collin.fnc(getME(model7, "X")[, -1])$cnumber
